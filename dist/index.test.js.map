{"version":3,"sources":["../dist-esnext/index.test.js"],"names":["assert","ST","describe","it","done","fileName","join","__dirname","createTestFile","expectedLastChunk","onEnd","lastChunk","equal","toString","readStream"],"mappings":";;AAAA;;;;AACA;;IAAYA,M;;AACZ;;IAAYC,E;;;;;;AACZC,SAAS,aAAT,EAAwB,YAAM;AAC1BA,aAAS,YAAT,EAAuB,YAAM;AACzBC,WAAG,sBAAH,EAA2B,UAACC,IAAD,EAAU;AACjC,gBAAMC,WAAW,eAAKC,IAAL,CAAUC,SAAV,EAAqB,sBAArB,CAAjB;AACAN,eAAGO,cAAH,CAAkBH,QAAlB;AACA,gBAAMI,oBAAoB,kBAA1B;AACA,qBAASC,KAAT,CAAeC,SAAf,EAA0B;AACtBX,uBAAOY,KAAP,CAAaD,UAAUE,QAAV,EAAb,EAAmCJ,iBAAnC;AACAL;AACH;AACDH,eAAGa,UAAH,CAAcT,QAAd,EAAwBK,KAAxB;AACH,SATD;AAUH,KAXD;AAYH,CAbD;AAcA","file":"index.test.js","sourcesContent":["import path from 'path';\nimport * as assert from 'ptz-assert';\nimport * as ST from './index';\ndescribe('stream-test', () => {\n    describe('readStream', () => {\n        it('reads the whole file', (done) => {\n            const fileName = path.join(__dirname, '../src/test-file.txt');\n            ST.createTestFile(fileName);\n            const expectedLastChunk = '999998\\n999999\\n';\n            function onEnd(lastChunk) {\n                assert.equal(lastChunk.toString(), expectedLastChunk);\n                done();\n            }\n            ST.readStream(fileName, onEnd);\n        });\n    });\n});\n//# sourceMappingURL=index.test.js.map"]}